import streamlit as st
import numpy as np
from scipy.stats import weibull_min
import matplotlib.pyplot as plt
from scipy.stats import poisson

st.title('Poisson- und Weibull-Verteilung')

st.header("Poisson Verteilung")
st.image('poisson-formel.png')

lam = st.slider('Lambda (λ)', min_value=1, max_value=50, value=5, step=1)

fig_poi, ax_poi = plt.subplots(1, 1)
# mean, var, skew, kurt = poisson.stats(mu, moments='mvsk')
x_poi = np.arange(poisson.ppf(0.01, lam),
              poisson.ppf(0.99, lam))
ax_poi.bar(x_poi, poisson.pmf(x_poi, lam))

st.pyplot(fig_poi)



st.header("Weibull Verteilung")

st.image('weibull-formel.png')

b = st.slider('Formparameter (b)', min_value=0.1, max_value=5.0, value=1.0, step=0.1)
T= st.slider('Lageparameter (T)', min_value=0.1, max_value=5.0, value=1.0, step=0.1)
t0 = st.slider('Schwellenparameter (t0)', min_value=0.1, max_value=3.0, value=0.0, step=0.1)
line = st.checkbox('Gerade bei 63,2%')

fig_wei, ax_wei = plt.subplots(1, 1)
x_wei = np.linspace(0, 5, 200)
ax_wei.plot(x_wei, weibull_min.pdf(x_wei, b, loc= t0, scale= T), label="Dichtefunktion")
ax_wei.plot(x_wei, weibull_min.cdf(x_wei, b, loc= t0, scale= T), label="Verteilungsfunktion")
if line:
    ax_wei.plot([0,T+t0],[0.632,0.632], linestyle='dotted', color='black')
    ax_wei.vlines([T+t0],0,weibull_min.cdf(T+t0, b, loc= t0, scale= T), linestyles='dotted', colors='black')

ax_wei.legend(loc='best', frameon=False)

st.pyplot(fig_wei)


st.subheader('Praxisbeispiele')

praxis_radio= st.radio('Auswahl',  ['Windgeschwindigkeiten', 'Herzinfakte'])

windspeeds = [31, 25, 12, 20, 16, 17, 11, 14, 24, 21, 12, 22, 31, 21, 28, 34, 27, 22, 18, 19, 21, 19, 24, 29, 29, 21, 20, 21, 19, 16, 26, 25, 18, 31, 24, 14, 20, 32, 23, 23, 27, 25, 26, 29, 17, 18, 24, 23, 12, 21, 20, 23, 23, 22, 19, 30, 23, 23, 23, 20, 25, 28, 20, 22, 24, 18, 20, 29, 17, 21, 27, 37, 29, 13, 16, 20, 22, 21, 23, 17, 22, 37, 18, 24, 17, 36, 26, 26, 26, 15, 27, 17, 30, 15, 22, 33, 26, 27, 21, 30, 27, 28, 30, 25, 28, 17, 19, 57, 37, 22, 31, 25, 30, 29, 38, 17, 26, 15, 16, 19, 19, 25, 20, 29, 26, 20, 28, 24, 22, 28, 28, 18, 17, 20, 23, 27, 29, 31, 30, 39, 23, 30, 26, 31, 28, 17, 27, 26, 24, 27, 26, 27, 25, 20, 23, 24, 29, 31, 22, 15, 17, 20, 20, 22, 17, 21, 22, 25, 26, 27, 22, 20, 21, 47, 22, 22, 23, 24, 22, 26, 22, 19, 21, 22, 26, 35, 24, 24, 32, 27, 27, 27, 22, 18, 29, 23, 30, 20, 19, 21, 23, 24, 22, 20, 17, 16, 23, 22, 19, 27, 11, 18, 20, 14, 14, 12, 18, 25, 22, 15, 23, 22, 19, 18, 18, 19, 20, 22, 20, 25, 22, 18, 19, 23, 17, 20, 16, 19, 24, 24, 24, 25, 29, 27, 23, 21, 18, 15, 23, 17, 26, 23, 24, 26, 25, 32, 26, 37, 21, 20, 13, 15, 20, 25, 19, 24, 24, 10, 13, 28, 20, 33, 14, 15, 15, 16, 12, 16, 20, 15, 14, 15, 12, 14, 18, 27, 22, 14, 23, 20, 21, 23, 22, 24, 20, 24, 36, 20, 16, 23, 17, 12, 15, 13, 16, 14, 11, 9, 12, 19, 23, 12, 14, 10, 25, 14, 25, 23, 28, 20, 17, 11, 25, 13, 31, 32, 27, 28, 11, 15, 28, 26, 15, 22, 16, 20, 28, 27, 28, 16, 17, 16, 24, 31, 28, 30, 16, 10, 16, 20, 20, 14, 14, 11, 11, 16, 17, 21, 26, 19, 20, 22, 17, 19, 13, 20, 18, 31, 25, 30, 21, 24, 21, 15, 21, 21, 13, 18, 24, 26, 12, 13, 32, 23, 21, 13, 13, 20, 21, 15, 19, 12, 20, 15, 19, 19, 17, 32, 23, 21, 20, 17, 24, 22, 25, 23, 21, 28, 22, 11, 13, 26, 16, 21, 26, 13, 18, 26, 27, 15, 14, 19, 28, 22, 18, 28, 31, 25, 30, 24, 15, 21, 24, 21, 17, 16, 15, 13, 36, 33, 13, 13, 16, 13, 14, 20, 18, 18, 23, 16, 17, 16, 20, 17, 22, 17, 15, 14, 22, 27, 29, 19, 24, 28, 18, 20, 25, 26, 27, 32, 16, 24, 26, 29, 27, 26, 12, 19, 19, 20, 20, 27, 18, 43, 25, 25, 22, 23, 16, 23, 20, 32, 37, 26, 19, 14, 15, 20, 23, 26, 28, 23, 26, 19, 31, 29, 20, 17, 26, 24, 20, 30, 35, 20, 28, 21, 24, 17, 32, 17, 29, 20, 18, 25, 33, 16, 16, 12, 16, 20, 16, 17, 14, 17, 13, 13, 16, 25, 20, 29, 22, 24, 25, 15, 21, 22, 26, 29, 17, 20, 16, 17, 18, 22, 17, 18, 26, 31, 29, 19, 22, 26, 28, 28, 29, 24, 21, 19, 19, 19, 18, 19, 19, 21, 23, 22, 19, 19, 23, 24, 20, 19, 17, 20, 25, 18, 16, 21, 17, 16, 17, 22, 21, 22, 22, 24, 20, 20, 19, 17, 16, 19, 17, 23, 20, 22, 23, 22, 18, 15, 23, 13, 18, 18, 15, 17, 24, 21, 19, 19, 23, 24, 19, 20, 16, 17, 25, 20, 20, 20, 17, 26, 19, 18, 18, 14, 15, 16, 17, 15, 16, 19, 21, 22, 17, 17, 16, 17, 18, 14, 14, 13, 12, 15, 20, 11, 16, 21, 23, 20, 15, 21, 16, 16, 14, 18, 20, 24, 25, 32, 26, 31, 23, 14, 31, 18, 42, 27, 12, 14, 14, 20, 19, 20, 28, 20, 9, 20, 25, 27, 14, 11, 17, 28, 30, 15, 11, 17, 35, 13, 14, 16, 22, 20, 22, 19, 15, 11, 12, 14, 12, 13, 14, 16, 12, 21, 13, 19, 23, 29, 37, 18, 16, 26, 25, 24, 20, 25, 15, 20, 24, 16, 17, 31, 33, 35, 11, 14, 20, 24, 13, 14, 13, 12, 13, 13, 18, 30, 16, 9, 16, 17, 19, 17, 29, 18, 12, 26, 17, 36, 26, 12, 24, 20, 30, 21, 17, 24, 25, 19, 28, 23, 23, 12, 22, 29, 21, 29, 23, 16, 20, 19, 24, 26, 25, 19, 21, 29, 28, 21, 16, 18, 37, 28, 19, 16, 21, 23, 22, 28, 25, 28, 22, 18, 26, 33, 30, 27, 26, 15, 16, 25, 26, 20, 17, 12, 25, 29, 23, 20, 31, 27, 28, 19, 20, 24, 18, 22, 24, 18, 37, 20, 17, 18, 25, 23, 19, 19, 26, 32, 26, 26, 20, 17, 22, 28, 25, 23, 13, 35, 25, 16, 17, 20, 25, 27, 37, 25, 23, 23, 22, 25, 19, 19, 15, 19, 29, 27, 30, 29, 26, 29, 13, 16, 15, 17, 31, 23, 29, 13, 16, 22, 22, 22, 22, 28, 21, 19, 21, 19, 22, 16, 18, 16, 20, 22, 20, 14, 18, 34, 14, 19, 22, 18, 21, 23, 22, 19, 16, 17, 17, 16, 22, 22, 20, 16, 19, 15, 39, 13, 17, 17, 23, 25, 24, 26, 28, 26, 23, 23, 25, 31, 28, 25, 24, 22, 20, 20, 23, 24, 22, 20, 17, 21, 21, 33, 17, 26, 30, 17, 18, 21, 22, 19, 18, 20, 18, 18, 19, 20, 20, 20, 21, 24, 19, 24, 12, 16, 16, 18, 19, 17, 14, 20, 21, 21, 17, 20, 19, 22, 25, 16, 14, 15, 17, 17, 19, 19, 25, 20, 20, 20, 31, 10, 15, 15, 18, 17, 12, 12, 16, 17, 13, 18, 20, 23, 21, 20, 13, 11, 21, 12, 13, 11, 14, 20, 21, 23, 26, 16, 14, 11, 13, 17, 16, 24, 21, 20, 23, 22, 18, 29, 15, 16, 19, 16, 17, 14, 14, 16, 21, 14, 17, 22, 17, 25, 11, 12, 20, 12, 16, 17, 12, 12, 13, 12, 16, 14, 18, 26, 29, 22, 15, 21, 23, 24, 12, 14, 9, 26, 28, 12, 20, 16, 17, 21, 19, 17, 27, 19, 32, 18, 15, 25, 17, 22, 17, 20, 21, 35, 35, 21, 11, 19, 19, 10, 28, 32, 20, 11, 20, 30, 16, 18, 25, 23, 17, 28, 28, 21, 22, 27, 35, 29, 26, 24, 13, 29, 16, 22, 14, 18, 11, 38, 43, 16, 25, 24, 14, 19, 22, 22, 18, 21, 20, 20, 21, 12, 19, 22, 22, 26, 19, 22, 21, 21, 28, 32, 24, 15, 22, 20, 37, 34, 26, 15, 25, 23, 22, 18, 21, 24, 29, 23, 23, 18, 19, 29, 25, 17, 23, 18, 15, 31, 18, 18, 21, 24, 24, 16, 21, 21, 23, 23, 38, 28, 17, 27, 20, 35, 27, 26, 27, 26, 29, 17, 22, 34, 15, 20, 26, 26, 22, 18, 15, 23, 20, 25, 21, 26, 16, 22, 20, 23, 23, 22, 22, 26, 30, 26, 26, 30, 33, 23, 25, 31, 34, 20, 17, 23, 23, 18, 23, 25, 25, 16, 20, 24, 32, 24, 33, 28, 23, 25, 16, 33, 19, 29, 24, 23, 34, 11, 14, 26, 16, 16, 20, 24, 41, 25, 17, 14, 20, 21, 21, 22, 27, 23, 20, 29, 28, 23, 19, 17, 22, 17, 22, 23, 19, 22, 30, 18, 23, 27, 24, 25, 26, 28, 19, 20, 27, 17, 19, 20, 22, 20, 19, 22, 35, 24, 23, 20, 29, 22, 24, 22, 24, 19, 24, 27, 21, 20, 17, 20, 20]
herzinf = [49, 48, 37, 58, 49, 38, 60, 36, 44, 53, 54, 41, 65, 54, 43, 41, 50, 47, 31, 58, 52, 46, 52, 57, 52, 55, 32, 49, 63, 56, 66, 65, 43, 48, 58, 65, 40, 40, 46, 57, 33, 38, 59, 34, 47, 58, 46, 56, 56, 49, 54, 43, 52, 50, 47, 56, 54, 56, 38, 44, 59, 49, 46, 50, 52, 43, 54, 52, 52, 58, 41, 53, 53, 35, 54, 48, 50, 47, 39, 46, 51, 50, 38, 41, 55, 48, 48, 54, 55, 48, 54, 48, 45, 49, 44, 48, 55, 46, 59, 47, 52, 54, 55, 51, 52, 49, 65, 32, 61, 50, 57, 51, 47, 60, 53, 62, 51, 51, 55, 58, 57, 60, 41, 34, 74, 57, 56, 61, 68, 59, 63, 38, 62, 46, 42, 59, 52, 60, 60, 56, 40, 51, 62, 63, 63, 64, 43, 64, 61, 52, 51, 69, 59, 48, 69, 36, 53, 43, 56, 58, 55, 67, 46, 53, 38, 53, 62, 47, 56, 56, 64, 61, 68, 57, 63, 60, 66, 63, 59, 61, 73, 47, 65, 70, 50, 60, 50, 43, 38, 54, 61, 42, 53, 55, 61, 51, 70, 61, 38, 57, 38, 62, 58, 52, 61, 50, 51, 65, 52, 47, 35, 57, 62, 59, 53, 62, 54, 56, 56, 54, 66, 63, 60, 55, 65, 60, 60, 59, 62, 63, 57, 63, 46, 58, 64, 63, 52, 69, 51, 60, 56, 55, 54, 77, 63, 55, 52, 64, 60, 58, 61, 40, 61, 57, 63, 59, 59, 55, 62, 53, 68, 53, 60, 59, 61, 57, 56, 58, 69, 67, 58, 65, 63, 57, 54, 72, 75, 49, 51, 60, 64, 61, 67, 62, 65, 63, 69, 62, 55, 75, 67, 58, 63, 62, 43, 68, 65, 48, 63, 61, 50, 59, 65, 49, 72, 50, 64, 55, 63, 59, 56, 62, 74, 54, 62, 76, 54, 70, 48, 61, 66, 55, 71, 74, 58, 56, 58, 64, 55, 57, 61, 71, 38, 55, 56, 69, 64, 72, 69, 56, 62, 67, 57, 69, 51, 48, 69, 64, 57, 53, 67, 74, 61, 64, 58, 60, 57, 55, 56, 61, 61, 74, 62, 53, 62, 46, 54, 55, 62, 70, 57, 56, 59, 60, 63, 61, 46, 53, 67, 58, 57, 59, 50, 48, 61, 59, 40, 59, 49, 44, 66, 65, 42, 61, 59, 62, 51, 57, 58, 47, 61, 45, 58, 35, 58, 50, 61, 54, 54, 52, 47, 58, 67, 57, 63, 48, 60, 59, 55, 60, 46, 56, 56, 49, 54, 57, 62, 60, 63, 66, 64, 56, 64, 50, 54, 53, 52, 40, 58, 55, 66, 38, 62, 58, 65, 69, 67, 62, 51, 46, 67, 56, 41, 56, 70, 70, 35, 77, 58, 60, 51, 55, 64, 59, 58, 54, 65, 63, 62, 43, 61, 39, 52, 62, 43, 68, 62, 60, 65, 60, 60, 54, 44, 55, 64, 60, 58, 48, 67, 43, 52, 59, 57, 57, 55, 61, 58, 58, 67, 44, 63, 63, 59, 57, 45, 68, 57, 57]
fit = st.button('Fit Weibull-Verteilung', b)

if praxis_radio == 'Windgeschwindigkeiten':
    data = windspeeds
else:
    data = herzinf

if fit:
    b_prax, t0_prax, T_prax = weibull_min.fit(data= data) # Vorhersage der Parameter für Weibull-Verteilung
    st.session_state.b_wind = b_prax
    st.session_state.T_wind = T_prax
    st.session_state.t0_wind = t0_prax

b_prax = st.slider('Formparameter (b)', key='b_wind', min_value=0.1, max_value=10.0, value=1.0, step=0.1)
T_prax= st.slider('Lageparameter (T)', key='T_wind', min_value=0.1, max_value=50.0, value=1.0, step=0.1)
t0_prax = st.slider('Schwellenparameter (t0)', key='t0_wind',min_value=0.1, max_value=15.0, value=0.0, step=0.1)

if praxis_radio == 'Windgeschwindigkeiten':
    xlabel='Windgeschwindigkeit in Meilen'
    datenquelle='[Datenquelle](https://www.kaggle.com/datasets/grubenm/austin-weather)'
else:
    xlabel='Alter bei Herzinfakt'
    st.text(f'63.2% der Ausfälle bis: {np.round(T_prax+t0_prax, 2)} Jahre')
    st.text(f'Ausfallfreie Zeit (t0): {np.round(t0_prax, 2)} Jahre')
    datenquelle='[Datenquelle](https://www.kaggle.com/datasets/fedesoriano/heart-failure-prediction)'

fig_prax, ax_prax = plt.subplots(1, 1)


ax_prax.hist(data, bins=range(np.max(data)), density=True, label='Histogramm') # Histogramm der Windböhen
x_wind = np.linspace(0, np.max(data), 1000)

ax_prax.plot(x_wind, weibull_min.pdf(x_wind, b_prax, t0_prax, T_prax), label='Weibull-Verteilung') # Weibull-Verteilung
ax_prax.legend(loc='best', frameon=False)
ax_prax.set_xlabel(xlabel)
ax_prax.set_ylabel('Anteil')

st.pyplot(fig_prax)

st.markdown(datenquelle)